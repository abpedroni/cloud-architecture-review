name: docker-build

# Example Tags e.g. `dev-abc123` vs `0.2.0`
# Note: dev and staging branch names are defined in build-and-push job.

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true

# ===============
#  Configuration
# ===============
env:
  azureRegistryName: aksarchitect
  imageName: aksarchitect.azurecr.io/frontend
  devTag: dev
  stagingTag: staging

jobs:

  # ===============
  #  Determine Tag
  # ===============
  tag-conventions:
    runs-on: ubuntu-latest
    outputs:
      git-sha: ${{ steps.set-tag.outputs.sha }}
      dev-tag: ${{ steps.set-tag.outputs.dev }}
      staging-tag: ${{ steps.set-tag.outputs.staging }}
    steps:
    - uses: actions/checkout@v2

    - id: git-sha
      name: save git sha
      run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - id: set-tag
      name: save dev and staging tag variants
      run: |
        echo "::set-output name=sha::${{ env.sha }}"
        echo "::set-output name=dev::${{ env.imageName }}:${{ env.devTag }}-${{ env.sha }}"
        echo "::set-output name=staging::${{ env.imageName }}:${{ env.stagingTag }}-${{ env.sha }}"

  # ========================
  #  Build Image (dev only)
  # ========================
  build-and-push:
    runs-on: ubuntu-latest
    needs: tag-conventions
    environment: ${{ inputs.environment }}
    steps:
    - run: echo "git sha ${{ needs.tag-conventions.outputs.git-sha }}" # Debugging

    - uses: actions/checkout@v2
    - name: 'Azure Login'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: 'Container Registry - Login'
      run: az acr login --name ${{ env.azureRegistryName }}


    # === Build Image (Dev) ===
    - name: 'Docker - Build and Push'
      if: github.ref == 'refs/heads/main' # DEV branch
      run: |
        docker build -t ${{ needs.tag-conventions.outputs.dev-tag }} .
        docker push ${{ needs.tag-conventions.outputs.dev-tag }}

    # === Promote Image (Staging) ===
    - name: 'Re-tag to Promote'
      if: github.ref == 'refs/heads/staging' # STAGING branch
      run: |
        docker pull ${{ needs.tag-conventions.outputs.dev-tag }}
        docker tag ${{ needs.tag-conventions.outputs.dev-tag }} ${{ needs.tag-conventions.outputs.staging-tag }}
        docker push ${{ needs.tag-conventions.outputs.staging-tag }}


    - name: 'Docker - Logout'
      run: docker logout
